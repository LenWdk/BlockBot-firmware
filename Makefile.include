OBJECTS+= $(patsubst %.c, %.o, $(SOURCES))
CC= avr-gcc
HOSTCC?= gcc

FLASHDEV?= -c arduino -b 57600 -P /dev/ttyACM0
FLASHPROG= avrdude
FLASHFLAGS+= -p $(CPU) -e $(FLASHDEV)

AVRCFLAGS+= -mmcu=$(CPU) -DF_CPU=$(FREQ)L -fno-caller-saves -static
CFLAGS+= -ffunction-sections -fdata-sections \
         -Os -Wall -Wextra -pedantic -Werror -Wshadow -Wstrict-overflow \
         -fno-strict-aliasing -std=c11

TEST_SRC+= $(wildcard tests/*.c)
TEST_TGT= $(patsubst %.c, %.test, $(TEST_SRC))

.PHONY: all
all: $(ATGTS) $(PROGNAME).elf

.PHONY: clean
clean:
	echo $(TEST_SRC)
	echo $(TEST_TGT)
	rm -f *.o *.elf

.PHONY: flash
flash: $(PROGNAME).elf
	$(FLASHPROG) $(FLASHFLAGS) -U flash:w:$(PROGNAME).elf

.PHONY: fuse
fuse:
	$(FLASHPROG) $(FLASHFLAGS) $(FUSES)

.PHONY: size
size: $(PROGNAME).elf
	avr-size -C --mcu=$(CPU) $(PROGNAME).elf

.PHONY: tests
tests: $(TEST_TGT)

%.test: %.c
	$(HOSTCC) $(CFLAGS) -I ../ -o $@ $<
	./$@
	rm $@

%.o: %.c
	$(CC) $(CFLAGS) $(AVRCFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -o $@ -c $<

%.elf : $(OBJECTS)
	$(CC) $(AVRCFLAGS) $(CFLAGS) -o $@ $(OBJECTS) $(LIBS)
